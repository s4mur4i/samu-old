=head1 NAME

herring.pl -- Support automatisation script

=head1 DESCRIPTION

This script is used as a wrapper script for automatisation task used by support.
To get information about any sub module call any option with help. Documentation and information can be reached under the respective sub module help.

=head1 SYNOPSIS

herring.pl [options] [function]

=head1 OPTIONS

=over

=item --help|-h

Print the help page

=item --man|-m

Print the man page with information about all modules

=item -v|-vv|-vvv|-vvvv

Increase verbosity of printing

=item -q|-qq|-qqq|-qqqq|-qqqqq|-qqqqqq

Decrease verbosity of printing

=back

=head1 FUNCTIONS

=over

=item vm

Access VM Entity functions

=item datastore

Access Datastore functions

=item ticket

Access ticket functions

=item kayako

Access kayako functions

=item bugzilla

Access bugzilla functions

=item admin

Higher level commands for administering or maintenance of the VCenter and environment

=back

=head1 SUBS

List of defined functions, each can be called with it's own help and detailed information. Each sub has their own help defined.

=head1 VM

=head3 SYNOPSIS

herring.pl vm [options] [function]

=head3 OPTIONS

=over

=item --help|-h

Print the help page

=back

=head3 FUNCTIONS

=over

=item clone

Sub used to provision vm guests from templates.

=item add

Sub to add different hardware to a guest

=item list

Sub to list different hardware of a guest

=item delete

Sub to delete/remove different hardware of a guest

=item change

Sub to change settings of a guest

=item info

Sub used to dump information about a vm

=back

=head1 VM_functions

=head2 VM_clone_function

=head3 SYNOPSIS

herring.pl vm clone [options]

=head3 OPTIONS

=over

=back

=head2 VM_list_function

=head3 SYNOPSIS

herring.pl vm list [options] [function]

=head3 OPTIONS

=over

=back

=head3 FUNCTIONS

=over

=item network

List network interfaces attached to a vm

=item cdrom

List cdrom-s attached to a vm

=item disk

List disk-s attached to a vm

=item snapshot

List snapshots attached to a vm

=back

=head2 VM_add_function

=head3 SYNOPSIS

herring.pl vm add [options] [function]

=head3 OPTIONS

=over

=back

=head3 FUNCTIONS

=over

=item cdrom

Add a cdrom drive to a vm

=item network

Add a network interface to a vm

=item disk

Add a thin provisioned hard disk to a vm

=item snapshot

List snapshots attached to a vm

=back

=head2 VM_delete_function

=head3 SYNOPSIS

herring.pl vm delete [options] [function]

=head3 OPTIONS

=over

=back

=head3 FUNCTIONS

=over

=item cdrom

Delete a cdrom drive to a vm

=item network

Delete a network interface to a vm

=item disk

Delete a hard disk from a vm

=item snapshot

Delete a snapshot attached to a vm

=back

=head2 VM_change_function

=head3 SYNOPSIS

herring.pl vm change [options] [function]

=head3 OPTIONS

=over

=back

=head3 FUNCTIONS

=over

=item cdrom

Change the backend iso to a cdrom drive

=item network

Change the network connected to a network

=item altername

Change the alternative name of a vm

=item snapshot

Revert to snapshot attached to a vm

=item power

Change the power state of a vm

=back

=head2 VM_info_function

=head3 SYNOPSIS

herring.pl vm info [options] [function]

=head3 OPTIONS

=over

=back

=head3 FUNCTIONS

=over

=item dumper

This information is used for development purposes, It dumps all object information about vm to STDOUT

=item runtime

Information about runtime environment

=back

=head2 VM_dumper_function

=head3 SYNOPSIS

herring.pl vm info dumper [options]

=head3 OPTIONS

=over

=back

=head2 VM_runtime_function

=head3 SYNOPSIS

herring.pl vm info runtime [options]

=head3 OPTIONS

=over

=back

=head1 TICKET

=head3 SYNOPSIS

herring.pl ticket [options] [function]


=head3 OPTIONS

=over

=item --help|-h

Print the help page

=back

=head3 FUNCTIONS

=over

=item list

List all ticket on the ESXi, their owner, the kayako status currently, and if possible the Bugzilla status

=item info

List all machines attached to a ticket, and their login information

=item on

Turn all machines on attached to a ticket

=item off

Turn all machines off attached to a ticket

=item delete

Delete all entities attached to a ticket

=back

=head1 TICKET_functions

=head2 TICKET_list_function

=head3 SYNOPSIS

herring.pl ticket list [options]

=head3 OPTIONS

=over

=back

=head2 TICKET_info_function

=head3 SYNOPSIS

herring.pl ticket info [options]

=head3 OPTIONS

=over

=back

=head2 TICKET_on_function

=head3 SYNOPSIS

herring.pl ticket on [options]

=head3 OPTIONS

=over

=item --help|-h

Print the help page

=back

=head2 TICKET_off_function

=head3 SYNOPSIS

herring.pl ticket off [options]

=head3 OPTIONS

=over

=back

=head2 TICKET_delete_function

=head3 SYNOPSIS

herring.pl ticket delete [options]

=head3 OPTIONS

=over

=back

=head1 DATASTORE

=head3 SYNOPSIS

herring.pl datastore [options] [function]

=head3 OPTIONS

=over

=back

=head3 FUNCTIONS

=over

=item list

List datastores mounted on VCenter

=item add

Add a datastore to the VCenter

=item delete

Unmount and delete a datastore from the VCenter

=item info

Information about a datastore

=back

=head1 DATASTORE_functions

=head2 DATASTORE_list_function

=head3 SYNOPSIS

herring.pl datastore list [options]

=head3 OPTIONS

=over

=back

=head2 DATASTORE_add_function

=head3 SYNOPSIS

herring.pl datastore add [options]

=head3 OPTIONS

=over

=back

=head2 DATASTORE_delete_function

=head3 SYNOPSIS

herring.pl datastore delete [options]

=head3 OPTIONS

=over

=back

=head2 DATASTORE_info_function

=head3 SYNOPSIS

herring.pl datastore info [options]

=head3 OPTIONS

=over

=back

=head1 KAYAKO

=head3 SYNOPSIS

herring.pl kayako [options] [functions]

=head3 OPTIONS

=over

=item -help|-h

Print the help page

=back

=head3 FUNCTIONS

=over

=item TBD

To Be Defined

=back

=head1 KAYAKO_functions

=head1 BUGZILLA

=head3 SYNOPSIS

herring.pl bugzilla [options] [functions]

=head3 OPTIONS

=over

=item -help|-h

Print the help page

=back

=head3 FUNCTIONS

=over

=item TBD

To Be Defined

=back

=head1 BUGZILLA_functions

=head1 ADMIN

=head3 SYNOPSIS

herring.pl admin [functions] [options]

=head3 OPTIONS

=over

=item --help|-h

Print the help page

=back

=head3 FUNCTIONS

=over

=item cleanup

Start the cleanup task to remove empty entities on the VCenter

=item templates

List template names and paths

=item test

Test connection to VCenter. Prints the Server time

=item pod2wiki

Transfer a pod file to Dokuwiki format

=back

=head1 ADMIN_functions

=head2 ADMIN_cleanup_function

=head3 SYNOPSIS

herring.pl admin cleanup [options]

=head3 OPTIONS

=over

=back

=head2 ADMIN_templates_function

=head3 SYNOPSIS

herring.pl admin templates [options]

=head3 OPTIONS

=over

=back

=head2 ADMIN_test_function

=head3 SYNOPSIS

herring.pl admin test [options]

=head3 OPTIONS

=over

=back

=head2 ADMIN_pod2wiki_function

=head3 SYNOPSIS

herring.pl admin pod2wiki [options]

=head3 OPTIONS

=over

=item in

The POD file to transfer

=item out

The output file

=back

=head1 Common_VI_options

=over

=item --config (variable VI_CONFIG)

Location of the VI Perl configuration file

=item --credstore (variable VI_CREDSTORE)

Name of the credential store file defaults to <HOME>/.vmware/credstore/vicredentials.xml on Linux and <APPDATA>/VMware/credstore/vicredentials.xml on Windows

=item --encoding (variable VI_ENCODING, default 'utf8')

Encoding: utf8, cp936 (Simplified Chinese), iso-8859-1 (German), shiftjis (Japanese)

=item --help

Display usage information for the script

=item --passthroughauth (variable VI_PASSTHROUGHAUTH)

Attempt to use pass-through authentication

=item --passthroughauthpackage (variable VI_PASSTHROUGHAUTHPACKAGE, default 'Negotiate')

Pass-through authentication negotiation package

=item --password (variable VI_PASSWORD)

Password

=item --portnumber (variable VI_PORTNUMBER)

Port used to connect to server

=item --protocol (variable VI_PROTOCOL, default 'https')

Protocol used to connect to server

=item --savesessionfile (variable VI_SAVESESSIONFILE)

File to save session ID/cookie to utilize

=item --server (variable VI_SERVER, default 'localhost')

VI server to connect to. Required if url is not present

=item --servicepath (variable VI_SERVICEPATH, default '/sdk/webService')

Service path used to connect to server

=item --sessionfile (variable VI_SESSIONFILE)

File containing session ID/cookie to utilize

=item --url (variable VI_URL)

VI SDK URL to connect to. Required if server is not present

=item --username (variable VI_USERNAME)

Username

=item --verbose (variable VI_VERBOSE)

Display additional debugging information

=item --version

Display version information for the script

=back

=head1 BUGS

Known Bugs:

=over

=item * There is a lot of anal sex happening at my desk

=back

=head1 FILES

SDK uses the default ~/.visdkrc for storing environmental values.
Further information can be found on: https://supportwiki.balabit/doku.php/products:vmware:infra_info
The file should have following content:

	VI_USERNAME=
	VI_PASSWORD=
	VI_SERVER=10.21.0.1
	VI_URL=https://10.21.0.1/sdk
	VI_PORTNUMBER=443
	VI_PROTOCOL=HTTPS
	VI_SERVICEPATH=/sdk/webService

You only need to fill the username and password entry with your AD username/password
In .bashrc the following entry should also be added:

	PERL_LWP_SSL_VERIFY_HOSTNAME=0

=head1 INSTALLATION

To test all required modules with required versions two scripts are required.

=head2 dependency

Two deb files have been created to make dependency install easier. they can be found under the deb folder.

=over

=item balabit-prereq

These packages are needed to run the normal scripts

=item balabit-test-prereq

These packages are needed to run the test scripts. Some packages can only be installed from CPAN, README should contain additional information

=back

To install the dependencies please do following:

	dpkg -i deb/<package>.deb
	apt-get install -f

=head2 generate_perl_modules.sh+TEST_PERL_MODULES.pl

=over

=item generate_perl_modules.sh

This script will help to generate a list of modules from scripts that are up to date. Under normal circumstances you don't need to run this script
This script will generate the PERL_MODULES file which is required by TEST_PERL_MODULES.pl

=item TEST_PERL_MODULES.pl

This script will do a test require on all modules in PERL_MODULES, and test if they can be loaded successfully
If you would like to test if the modules for running the test framework are installed run it with environment variable TEST

	TEST=1 ./TEST_PERL_MODULES.pl

=back

=head2 Makefile.PL

This is the official version from CPAN how to distribute and test modules. Makefile.PL contains all modules needed to run or test the code/modules.
To run it do:

	perl Makefile.PL

It will print information if any module is missing any required version of a module.
To clean up files generated by the Makefile.PL run following commands:

	make clean
	rm Makefile.old

=head3 Tests

To run tests either make or prove can be used.

=over

=item prove

Prove is installed with Test::More and is a command line interface to run tests:

	prove -l t/*

=item Makefile.PL

Makefile.PL can be used to run the test suite with make:

	perl Makefile.PL
	make test
	make clean
	rm Makefile.old

=back

=head3 test_variables

Some tests are skipped because normal environment they shouldn't be run or used. If required to be run the following environment variables need to be configured:

=over

=item DNS

This will run DNS queries to see if resolve is working

=item AUTHOR

This will check if AUTHOR has not forgotten to update specific tests, or left fix me -s in the code

=item CRITIC

This will criticise the code to see if it is tidy, or perl standards have been used

=item POD

This will run tests on the pod file

=item ALL

This will run all above tests

=back

=head1 LOGLEVEL

In the framework we use 10 levels for logs. Default is 6

=over

=item 10 DEBUG2

Very Verbose information, mostly variables and objects are dumped at this level

=item 9  DEBUG1

Variables are dumped at this level

=item 8  DEBUG

Subroutine entries and exists are logged

=item 7  INFO

Information messages printed

=item 6  NOTICE

Notice messages are printed. This is default level

=item 5  WARNING

Warning messages are printed

=item 4  ERROR

Errors are printed

=item 3  CRITICAL

Critical messages are printed

=item 2  ALERT

Alert messages are printed

=item 1  EMERGENCY

Emergency messages are printed

=item 0

At this level no information is printed. This level should very rarely be used

=back

=head1 AUTHOR

	Krisztian Banhidy <s4mur4i@balabit.hu>

=cut
