=head1 FILES

SDK uses the default ~/.visdkrc for storing environmental values.
Further information can be found on: https://supportwiki.balabit/doku.php/products:vmware:infra_info
The file should have following content:

    VI_USERNAME=
    VI_PASSWORD=
    VI_SERVER=10.21.0.1
    VI_URL=https://10.21.0.1/sdk
    VI_PORTNUMBER=443
    VI_PROTOCOL=HTTPS
    VI_SERVICEPATH=/sdk/webService

You only need to fill the username and password entry with your AD username/password
In .bashrc the following entry should also be added:

    PERL_LWP_SSL_VERIFY_HOSTNAME=0

=head1 INSTALLATION

To test all required modules with required versions two scripts are required.

=head2 dependency

Two deb files have been created to make dependency install easier. they can be found under the deb folder.

=over

=item balabit-prereq

These packages are needed to run the normal scripts

=item balabit-test-prereq

These packages are needed to run the test scripts. Some packages can only be installed from CPAN, README should contain additional information

=back

To install the dependencies please do following:

    dpkg -i deb/<package>.deb
    apt-get install -f

=head2 generate_perl_modules.sh+TEST_PERL_MODULES.pl

=over

=item generate_perl_modules.sh

This script will help to generate a list of modules from scripts that are up to date. Under normal circumstances you don't need to run this script
This script will generate the PERL_MODULES file which is required by TEST_PERL_MODULES.pl

=item TEST_PERL_MODULES.pl

This script will do a test require on all modules in PERL_MODULES, and test if they can be loaded successfully
If you would like to test if the modules for running the test framework are installed run it with environment variable TEST

    TEST=1 ./TEST_PERL_MODULES.pl

=back

=head2 Makefile.PL

This is the official version from CPAN how to distribute and test modules. Makefile.PL contains all modules needed to run or test the code/modules.
To run it do:

    perl Makefile.PL

It will print information if any module is missing any required version of a module.
To clean up files generated by the Makefile.PL run following commands:

    make clean
    rm Makefile.old

=head3 Tests

To run tests either make or prove can be used.

=over

=item prove

Prove is installed with Test::More and is a command line interface to run tests:

    prove -l t/*

=item Makefile.PL

Makefile.PL can be used to run the test suite with make:

    perl Makefile.PL
    make test
    make clean
    rm Makefile.old

=back

=head3 test_variables

Some tests are skipped because normal environment they shouldn't be run or used. If required to be run the following environment variables need to be configured:

=over

=item DNS

This will run DNS queries to see if resolve is working

=item AUTHOR

This will check if AUTHOR has not forgotten to update specific tests, or left fix me -s in the code

=item CRITIC

This will criticise the code to see if it is tidy, or perl standards have been used

=item POD

This will run tests on the pod file

=item ALL

This will run all above tests

=back
